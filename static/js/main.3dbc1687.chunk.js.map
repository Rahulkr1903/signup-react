{"version":3,"sources":["components/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Signup","useState","username","email","Phone","Password","userRegistration","setUserRegistration","records","setRecords","handleInput","e","name","target","value","action","onSubmit","preventDefault","newRecord","id","Date","getTime","toString","htmlFor","type","onChange","className","map","curentElement","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgFeA,EA9EA,WACX,MAAgDC,mBAAS,CACrDC,SAAS,GACTC,MAAM,GACNC,MAAM,GACNC,SAAS,KAJb,mBAAOC,EAAP,KAAyBC,EAAzB,KAMA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAc,SAACC,GACjB,IAAMC,EAAKD,EAAEE,OAAOD,KACdE,EAAMH,EAAEE,OAAOC,MAErBP,EAAoB,2BAAID,GAAL,kBAAwBM,EAAQE,MAYvD,OACI,qCACA,mDACA,uBAAMC,OAAO,GAAGC,SAZC,SAACL,GAClBA,EAAEM,iBAEF,IAAMC,EAAU,2BAAIZ,GAAL,IAAsBa,IAAG,IAAIC,MAAOC,UAAUC,aAE7Db,EAAW,GAAD,mBAAKD,GAAL,CAAaU,KAEvBX,EAAoB,CAACL,SAAS,GAAKC,MAAM,GAAIC,MAAM,GAAIC,SAAS,MAKhE,UACI,gCACI,uBAAOkB,QAAQ,WAAf,sBACA,uBAAOC,KAAK,OACZV,MAAOR,EAAiBJ,SACxBuB,SAAUf,EACTE,KAAK,WAAWO,GAAG,gBAExB,gCACI,uBAAOI,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OACZV,MAAOR,EAAiBH,MACxBsB,SAAUf,EACVE,KAAK,QAAQO,GAAG,aAEpB,gCACI,uBAAOI,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OACZV,MAAOR,EAAiBF,MACxCqB,SAAUf,EACME,KAAK,QAAQO,GAAG,aAEpB,gCACI,uBAAOI,QAAQ,WAAf,sBACA,uBAAOC,KAAK,OACZV,MAAOR,EAAiBD,SACxCoB,SAAUf,EACME,KAAK,WAAWO,GAAG,gBAEvB,wBAAQO,UAAU,MAAMF,KAAK,SAA7B,uBAEJ,8BAEQhB,EAAQmB,KAAI,SAACC,GACT,OACI,sBAAKF,UAAU,gBAAf,UACI,qDAAwBE,EAAc1B,YACtC,8CAAiB0B,EAAczB,SAC/B,qDAAwByB,EAAcxB,SACtC,iDAAoBwB,EAAcvB,wBCzD/CwB,EARH,WACV,OACE,8BACC,cAAC,EAAD,OCKUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3dbc1687.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst Signup = () => {\r\n    const [userRegistration, setUserRegistration] = useState({\r\n        username:\"\",\r\n        email:\"\",\r\n        Phone:\"\",\r\n        Password:\"\",\r\n    });\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const handleInput = (e) =>{\r\n        const name=e.target.name;\r\n        const value=e.target.value;\r\n\r\n        setUserRegistration({...userRegistration, [name] : value});\r\n\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const newRecord={...userRegistration,id:new Date().getTime().toString()}\r\n\r\n        setRecords([...records,newRecord]);\r\n\r\n        setUserRegistration({username:\"\" , email:\"\", Phone:\"\", Password:\"\"});\r\n    }\r\n    return (\r\n        <>\r\n        <h1>Registration Form</h1>\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"username\">Fullname</label>\r\n                <input type=\"text\" \r\n                value={userRegistration.username}\r\n                onChange={handleInput}\r\n                 name=\"username\" id=\"username\"/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"text\"\r\n                value={userRegistration.email}\r\n                onChange={handleInput}\r\n                name=\"email\" id=\"email\"/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"Phone\">Phone</label>\r\n                <input type=\"text\"\r\n                value={userRegistration.Phone}\r\nonChange={handleInput}\r\n                name=\"Phone\" id=\"Phone\"/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"Password\">Password</label>\r\n                <input type=\"text\"\r\n                value={userRegistration.Password}\r\nonChange={handleInput}\r\n                name=\"Password\" id=\"Password\"/>\r\n            </div>\r\n            <button className=\"btn\" type=\"submit\">Submit</button>\r\n        </form>\r\n        <div>\r\n            {\r\n                records.map((curentElement) =>{\r\n                    return(\r\n                        <div className=\"showDataStyle\">\r\n                            <p>The name of user is {curentElement.username}</p>\r\n                            <p>The email is {curentElement.email}</p>\r\n                            <p>the phone number is {curentElement.Phone}</p>\r\n                            <p>the Password is {curentElement.Password}</p>\r\n                            </div> \r\n                    )\r\n\r\n                })\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Signup from './components/Signup';\n\nconst App = () => {\n  return (\n    <div>\n     <Signup />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}